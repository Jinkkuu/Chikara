# Generated by Django 5.1.7 on 2025-03-22 22:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Beatmap',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('title_unicode', models.TextField(blank=True, null=True)),
                ('artist', models.TextField(blank=True, null=True)),
                ('artist_unicode', models.TextField(blank=True, null=True)),
                ('difficulty', models.TextField(blank=True, null=True)),
                ('BPM', models.IntegerField(blank=True, null=True)),
                ('ranked', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('mapper', models.TextField(blank=True, null=True)),
                ('osubeatmapid', models.IntegerField(blank=True, null=True)),
                ('osubeatmapsetid', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'beatmaps',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('username', models.CharField(blank=True, max_length=256, null=True)),
                ('beatmapname', models.CharField(blank=True, max_length=256, null=True)),
                ('artist', models.TextField(blank=True, null=True)),
                ('points', models.FloatField(blank=True, null=True)),
                ('combo', models.IntegerField(blank=True, null=True)),
                ('beatmap_id', models.IntegerField(blank=True, null=True)),
                ('beatmapset_id', models.IntegerField(blank=True, null=True)),
                ('max', models.IntegerField(blank=True, null=True)),
                ('great', models.IntegerField(blank=True, null=True)),
                ('meh', models.IntegerField(blank=True, null=True)),
                ('bad', models.IntegerField(blank=True, null=True)),
                ('beatmapdiff', models.CharField(blank=True, max_length=256, null=True)),
                ('mods', models.CharField(blank=True, max_length=48, null=True)),
                ('maxpoints', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'scores',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=256, null=True)),
                ('email_address', models.CharField(blank=True, max_length=256, null=True)),
                ('password', models.CharField(blank=True, max_length=64, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('stattime', models.IntegerField(blank=True, null=True)),
                ('playtime', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('ranked_score', models.IntegerField(blank=True, null=True)),
                ('ranked_points', models.IntegerField(blank=True, null=True)),
                ('max', models.IntegerField(blank=True, null=True)),
                ('great', models.IntegerField(blank=True, null=True)),
                ('meh', models.IntegerField(blank=True, null=True)),
                ('bad', models.IntegerField(blank=True, null=True)),
                ('max_combo', models.IntegerField(blank=True, null=True)),
                ('ranking', models.IntegerField(blank=True, null=True)),
                ('money', models.FloatField(blank=True, null=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
    ]
